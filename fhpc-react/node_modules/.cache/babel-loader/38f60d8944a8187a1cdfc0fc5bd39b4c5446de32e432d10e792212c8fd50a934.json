{"ast":null,"code":"var _jsxFileName = \"/home/jp/Desktop/petcare/FHPC/fhpc-react/src/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginInput(props) {\n  const {\n    id,\n    placeholder,\n    labelText,\n    value,\n    onChange,\n    type\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"form-label\",\n      children: labelText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChange,\n      required: true,\n      type: type,\n      className: \"form-control\",\n      id: id,\n      name: id,\n      value: value,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = LoginInput;\nexport default function LoginForm() {\n  _s();\n  const [loginData, setLoginData] = useState({\n    username: '',\n    password: ''\n  });\n  const handleLogindata = e => {\n    const value = e.target.value;\n    const inputName = e.target.name;\n    setLoginData({\n      ...FormData,\n      [inputName]: value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log('password');\n    const response = await fetch('http://localhost:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        username: loginData.username,\n        password: loginData.password\n      })\n    });\n    const data = await response.json();\n    console.log(\"TOKEN:\", data.access);\n    localStorage.setItem('accessToken', data.access);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(LoginInput, {\n        id: \"username\",\n        placeholder: \"username\",\n        labelText: \" UserName\",\n        value: loginData.username,\n        onChange: handleLogindata,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LoginInput, {\n        id: \"password\",\n        placeholder: \"Super Secret Password\",\n        labelText: \"Password\",\n        value: loginData.password,\n        onChange: handleLogindata,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(LoginForm, \"cGWFcr+tksmY/o72ccB/B7hRrAo=\");\n_c2 = LoginForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginInput\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"names":["useState","LoginInput","props","id","placeholder","labelText","value","onChange","type","LoginForm","loginData","setLoginData","username","password","handleLogindata","e","target","inputName","name","FormData","handleSubmit","event","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","access","localStorage","setItem"],"sources":["/home/jp/Desktop/petcare/FHPC/fhpc-react/src/Login.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction LoginInput(props) {\n    const {id, placeholder, labelText, value, onChange, type} = props;\n    return (\n        <div className='mb-3'>\n            <label htmlFor={id} className='form-label'>{labelText}</label>\n            <input onChange={onChange} required type={type} className=\"form-control\" id={id} name={id} value={value} placeholder={placeholder} />\n        </div>\n    )\n}\n\nexport default function LoginForm() {\n    const [loginData, setLoginData] = useState({\n        username: '',\n        password: ''\n    })\n\n    const handleLogindata = (e) => {\n        const value = e.target.value;\n        const inputName = e.target.name;\n        setLoginData({\n            ...FormData,\n            [inputName]: value\n        });\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        console.log('password')\n        const response = await fetch('http://localhost:8000/api/token/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n            body: JSON.stringify({\n                username: loginData.username,\n                password: loginData.password,\n            }),\n        });\n        const data = await response.json()\n        console.log(\"TOKEN:\", data.access)\n\n        localStorage.setItem('accessToken', data.access);\n    }\n\n    return (\n        <>\n        <form className='form' onSubmit={handleSubmit}>\n            <LoginInput\n                id=\"username\"\n                placeholder=\"username\"\n                labelText=\" UserName\"\n                value={loginData.username}\n                onChange={handleLogindata}\n                type=\"text\" />\n            <LoginInput \n                id=\"password\" \n                placeholder=\"Super Secret Password\" \n                labelText=\"Password\"\n                value={loginData.password}\n                onChange={handleLogindata}\n                type=\"text\" />\n            <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n        </form>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}